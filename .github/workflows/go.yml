# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

# For connecting with Azure, first create a service principal: https://learn.microsoft.com/en-us/azure/developer/github/connect-from-azure?tabs=azure-cli%2Clinux
# appId = clientId = 07ce1783-2e92-4d86-bfb5-4c4d564991c4
# subscriptionId = d5689b94-e56d-4ef0-aea3-138fe074a835
# tenantId = 7ffa5f51-c9db-4f5d-b75c-ab79f72f8aaf

on: push

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v3
      with:
        go-version: 'stable'
    - run: go build -v
    - run: go test -v
    - uses: actions/upload-artifact@v3.1.1
      with:
        path: |
          host.json
          go-azure-function
          HttpExample/*
  test:
    environment: test
    runs-on: ubuntu-latest
    env:
      ResourceGroup: go-azure-function-test-rg
      Location: westeurope
      StorageAccount: goazurefunctiontestsa
      FunctionApp: goazurefunctiontestfa
    steps:
    - uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    - run: az group create --location $Location --name $ResourceGroup
    - run: az storage account create --name $StorageAccount --location $Location --resource-group $ResourceGroup --sku Standard_LRS
    - run: az functionapp create --name $FunctionApp --storage-account $StorageAccount --consumption-plan-location $Location --resource-group $ResourceGroup --functions-version 4 --os-type Linux --assign-identity --https-only true --runtime custom
    - uses: actions/download-artifact@v3
    - uses: Azure/functions-action@v1
      with:
        app-name: ${{ env.FunctionApp }}
        package: artifact
    - run: az logout
      if: ${{ always() }}