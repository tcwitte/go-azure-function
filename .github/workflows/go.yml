# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

# For connecting with Azure, first create a service principal: https://learn.microsoft.com/en-us/azure/developer/github/connect-from-azure?tabs=azure-cli%2Clinux
# appId = clientId = 07ce1783-2e92-4d86-bfb5-4c4d564991c4
# subscriptionId = d5689b94-e56d-4ef0-aea3-138fe074a835
# tenantId = 7ffa5f51-c9db-4f5d-b75c-ab79f72f8aaf

on: push

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v3
      with:
        go-version: 'stable'
    - run: go build -v
    - run: go test -v
    - uses: actions/upload-artifact@v3.1.1
      with:
        path: |
          host.json
          go-azure-function
          HttpExample/*
  infra:
    environment: production
    runs-on: ubuntu-latest
    steps:
    - uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    - run: az group create --location westeurope --name go-azure-function-prod-rg
    - run: az storage account create --name goazurefunctionstprod --location westeurope --resource-group go-azure-function-prod-rg --sku Standard_LRS
    - run: az functionapp create --name goazurefunctionfaprod --storage-account goazurefunctionstprod --consumption-plan-location westeurope --resource-group go-azure-function-prod-rg --functions-version 4
    - run: az logout
      if: ${{ always() }}